[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nypd-arrest-visualization",
    "section": "",
    "text": "1 Introduction\nAs new students in NYC, we are constantly exposed to crime-related updates through Clery Crime Alerts from Columbia University, which emphasize the importance of staying informed about local safety concerns. Additionally, Columbia’s initiatives, such as self-defense classes and situational awareness events, highlight the need to understand crime dynamics in our community. Beyond personal safety, this topic provides us an opportunity to examine broader societal concerns, including the effectiveness of public safety policies and the equity of law enforcement. This motivated us to explore NYC’s arrest data to gain deeper insights about the trend and distributions across the city.\nOur primary focus is to analyze and highlight the crime frequency distribution across precincts in NYC from January to September 2024, as understanding these geographical patterns is crucial for identifying areas with higher or lower crime rates. Additionally, we aim to uncover temporal trends in arrests, such as fluctuations by month or time of day, to better understand when crimes are more likely to occur. Furthermore, we seek to identify the most prevalent types of crimes and examine how these vary across demographic groups, including age, sex, and race, to provide a comprehensive view of NYC’s crime dynamics.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe data source for this project is the “NYPD Arrest Data (Year to Date)” dataset, available through NYC OpenData. This data is collected by the New York Police Department (NYPD) and is reviewed by the Office of Management Analysis and Planning. Each record represents an arrest made in NYC by the NYPD, including details such as the type of crime, location, time of enforcement, and perpetrator’s demographics.\nThe data is in tabular format, consisting of 19 columns and approximately 195,000 rows, and is manually updated every quarter, with the data format including both numerical and text categorical fields. The available attachment, “NYPD_Arrest_YTD_DataDictionary.xlsx,” contains a detailed description of each variable.\nHowever, the dataset has several potential issues, including inconsistencies or delays due to manual updates, and outdated entries because of the quarterly update frequency. Null values are frequently present in certain fields, as some specific data were not collected or were unknown at the time of the report. Additionally, geo-location inaccuracies may affect spatial analysis since some arrests are represented by approximate coordinates.\nThe dataset is available in CSV format on the NYC OpenData portal, which can be directly exported, downloaded locally, and imported into RStudio using the read.csv() function.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(naniar)\n\n\n\n\nCode\ndata &lt;- read.csv(\"NYPD_Arrest_Data.csv\", na.strings = c(\"(null)\", \"N/A\"))\nmissing_summary &lt;- data |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(cols = everything(), names_to = \"Column\", values_to = \"Missing_Values\") |&gt;\n  arrange(desc(Missing_Values)) |&gt;\n  mutate(Column = factor(Column, levels = Column)) |&gt;\n  mutate(Proportion = Missing_Values / nrow(data)) \n\nggplot(missing_summary, aes(x = Column, y = Missing_Values)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Number and Proportion of Missing Values by Column\", x = \"Columns\", y = \"Number of missing values\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(\n    name = \"Number of missing values\",\n    sec.axis = sec_axis(~ . / nrow(data) * 100, name = \"Proportion of missing values (%)\")\n  )\n\n\n\n\n\n\n\n\n\nThe columns PD_DESC, KY_CD, and OFNS_DESC have the highest number of missing values (26 rows each) and the columns PD_CD, LAW_CODE, and LAW_CAT_CD have fewer missing values (6 rows each). All other columns have no missing values. This discrepancy arises because certain data, like the arrest date, borough of arrest and perpetrator’s demographic information, are straightforward to record during the initial recording process. In contrast, classifying the level of offense and providing the description of internal classification often require more investigation or process.\nThe missing data in the dataset is negligible in the context of the overall dataset size, constituting less than 0.01%, indicating that the impact of missing data on analyses is minimal.\n\n\nCode\ndata_with_na &lt;- data |&gt;\n  filter(if_any(everything(), is.na))\nvis_miss(data_with_na) +\n  labs(title = \"Heatmap of missing values across rows and columns\", x = \"Columns\", y = \"Rows\")\n\n\n\n\n\n\n\n\n\nThe heatmap reveals that missing values are concentrated in a few rows and specific columns, with no widespread gaps. This suggests missing data is likely due to specific incidents or cases rather than systemic issues. In particular, it might be the instances where information was not available or unknown at the time of the report.\n\n\nCode\nboro_na_summary &lt;- data_with_na |&gt;\n  group_by(ARREST_BORO) |&gt;\n  summarise(Missing_Count = n()) |&gt;\n  arrange(desc(Missing_Count)) |&gt;\n    mutate(ARREST_BORO = case_when(\n      ARREST_BORO == \"B\" ~ \"Bronx\",\n      ARREST_BORO == \"S\" ~ \"Staten Island\",\n      ARREST_BORO == \"K\" ~ \"Brooklyn\",\n      ARREST_BORO == \"M\" ~ \"Manhattan\",\n      ARREST_BORO == \"Q\" ~ \"Queens\"\n    )) |&gt;\n  mutate(ARREST_BORO = factor(ARREST_BORO, levels = ARREST_BORO))\n  \nggplot(boro_na_summary, aes(x = ARREST_BORO, y = Missing_Count)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  scale_y_continuous(breaks = seq(0, 10, by = 2)) +\n  labs(title = \"Distribution of missing values by Arrest Borough\", x = \"Arrest Borough\", y = \"Count of Missing Rows\")\n\n\n\n\n\n\n\n\n\nAccording to this bar plot, Queens has the highest number of missing values, followed by Brooklyn and Manhattan, while Bronx has the least. This distribution could reflect operational or reporting differences between boroughs.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(naniar)\nlibrary(ggmap)\nlibrary(lubridate)\nlibrary(sf)\nlibrary(dygraphs)\nlibrary(xts)\nlibrary(ggiraph)\nlibrary(sf)\n\n\n\n\nCode\ndata &lt;- read.csv(\"NYPD_Arrest_Data.csv\", na.strings = c(\"(null)\", \"N/A\"))\n\n\n\n\nCode\n### Data Preprocessing step\ndata &lt;- na.omit(data)\ndata$ARREST_DATE &lt;- as.Date(data$ARREST_DATE, format = \"%m/%d/%Y\")\ndata &lt;- data |&gt;\n  mutate(ARREST_BORO = case_when(\n    ARREST_BORO == \"B\" ~ \"Bronx\",\n    ARREST_BORO == \"S\" ~ \"Staten Island\",\n    ARREST_BORO == \"K\" ~ \"Brooklyn\",\n    ARREST_BORO == \"M\" ~ \"Manhattan\",\n    ARREST_BORO == \"Q\" ~ \"Queens\"\n  )) \n\n\n\n\nCode\ndaily_data &lt;- data |&gt;\n  group_by(ARREST_DATE) |&gt;\n  summarise(Count = n(), .groups = \"drop\")\n\n\nggplot(daily_data, aes(x = ARREST_DATE, y = Count)) +\n  geom_line(size = 0.8, alpha = 0.8) +\n  labs(\n    title = \"Daily NYPD Arrests\",\n    subtitle = \"From January 1st to September 30th\",\n    x = \"Date\",\n    y = \"Number of Arrests\",\n    color = \"Borough\"\n  ) +\n  scale_x_date(date_breaks = \"2 week\", date_labels = \"%b %d\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nCode\ndata &lt;- data |&gt;\n  mutate(Weekday = wday(ARREST_DATE, label = TRUE, abbr = TRUE))  \n\nweekday_summary &lt;- data |&gt;\n  group_by(ARREST_DATE, Weekday) |&gt;\n  summarise(Count = n(), .groups = \"drop\")  \n\nggplot(weekday_summary, aes(x = ARREST_DATE, y = Count, group = Weekday, fill = Count)) +\n  geom_area(alpha = 0.8) +  \n  geom_line(size = 1, color = \"black\") +  \n  facet_grid(Weekday ~ ., scales = \"fixed\", switch = \"y\") +  \n  scale_fill_gradient(\n    low = \"lightblue\",  \n    high = \"darkblue\",  \n    name = \"Arrest Count\"  \n  ) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +\n  labs(\n    title = \"Daily NYPD Arrests by Weekday\",\n    x = \"Date\",\n    y = \"Number of Arrests\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1), \n    strip.text.y.left = element_text(angle = 0),      \n    strip.placement = \"outside\",                     \n    legend.position = \"right\"                    \n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndaily_summary_by_borough &lt;- data |&gt;\n  group_by(ARREST_DATE, ARREST_BORO) |&gt;\n  summarise(Count = n(), .groups = \"drop\")\n\nwide_data &lt;- tidyr::pivot_wider(daily_summary_by_borough, \n                                names_from = ARREST_BORO, \n                                values_from = Count, \n                                values_fill = 0)\n\nwide_data$ARREST_DATE &lt;- as.Date(wide_data$ARREST_DATE)\n\ntime_series_obj &lt;- xts(wide_data[,-1], order.by = wide_data$ARREST_DATE)\n\ncustom_colors &lt;- c(\n  \"Bronx\" = \"#E7298A\",    \n  \"Brooklyn\" = \"#6495ED\", \n  \"Manhattan\" = \"#E6AB02\",\n  \"Queens\" = \"#66A61E\",   \n  \"Staten Island\" = \"#7570B3\" \n)\n\ndygraph(time_series_obj, main = \"Daily NYPD Arrests\") |&gt;\n  dyAxis(\"y\", label = \"Number of Arrests\", valueRange = c(0, 400)) |&gt;\n  dyAxis(\"x\", label = \"Date\") |&gt;\n  dyRangeSelector() |&gt;\n  dyLegend(width = 300, labelsSeparateLines = TRUE) |&gt;\n  dyOptions(colors = unname(custom_colors), strokeWidth = 2, gridLineColor = \"#DDDDDD\") \n\n\n\n\n\n\n\n\nCode\ndaily_summary_by_borough &lt;- data |&gt;\n  group_by(ARREST_DATE, ARREST_BORO) |&gt;\n  summarise(Count = n(), .groups = \"drop\")\n\nggplot(daily_summary_by_borough, aes(x = ARREST_DATE, y = Count, color = ARREST_BORO)) +\n  geom_line(size = 0.8, alpha = 0.8) +\n  labs(\n    title = \"Daily NYPD Arrests\",\n    subtitle = \"From January 1st to September 30th\",\n    x = \"Date\",\n    y = \"Number of Arrests\",\n    color = \"Borough\"\n  ) +\n  scale_x_date(date_breaks = \"2 week\", date_labels = \"%b %d\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nweekly_summary_by_borough &lt;- data |&gt;\n  mutate(Week = floor_date(ARREST_DATE, unit = \"week\")) |&gt;  # Create a 'Week' column\n  group_by(Week, ARREST_BORO) |&gt;                           # Group by week and borough\n  summarise(Count = n(), .groups = \"drop\") \nmax_week &lt;- max(weekly_summary_by_borough$Week)\nweekly_summary_filtered &lt;- weekly_summary_by_borough |&gt;\n  filter(Week &lt; max_week)\n\nggplot(weekly_summary_filtered, aes(x = Week, y = Count, color = ARREST_BORO)) +\n  geom_line(size = 1, alpha = 0.8) +\n  scale_x_date(date_breaks = \"2 week\", date_labels = \"%b %d\") + # Weekly x-axis labels\n  labs(\n    title = \"Weekly NYPD Arrests\",\n    subtitle = \"From January 1st to September 30th\",\n    x = \"Week\",\n    y = \"Number of Arrests\",\n    color = \"Borough\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels\n    axis.title.x = element_text(size = 14),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nnyc_sf &lt;- read_sf(\"new-york-city-boroughs.geojson\")\ndata &lt;- data |&gt;\n  filter(Longitude != 0 & Latitude != 0)\narrest_sf &lt;- st_as_sf(data, coords = c(\"Longitude\", \"Latitude\"), crs = 4326)\n\nborough_arrest_count &lt;- arrest_sf |&gt;\n  st_drop_geometry() |&gt;\n  group_by(ARREST_BORO) |&gt;\n  summarise(total_arrests = n())\n\nnyc_sf &lt;- nyc_sf |&gt;\n  left_join(borough_arrest_count, by = c(\"name\" = \"ARREST_BORO\")) |&gt;\n  mutate(tooltip = paste(name, \"&lt;br&gt;Total Arrests:\", total_arrests))\n\ninteractive_map &lt;- ggplot() +\n  geom_sf_interactive(\n    data = nyc_sf,\n    aes(fill = name, geometry = geometry, tooltip = tooltip),\n    color = \"black\",\n    size = 0.3,\n    alpha = 0.5\n  ) +\n  geom_sf(\n    data = arrest_sf,\n    aes(geometry = geometry),\n    color = \"red\",\n    size = 0.05,\n    alpha = 0.4,\n    stroke = 0.3,\n    shape = 1\n  ) +\n  labs(\n    title = \"Arrest Locations in NYC\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Borough\"\n  ) +\n  coord_sf() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, face = \"italic\"),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    plot.margin = margin(1, 1, 1, 1, \"cm\")\n  )\n\ngirafe(ggobj = interactive_map)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  }
]